{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/DateTime.jsx","webpack:///./src/components/SiteMetadata.jsx","webpack:///./src/components/Heading.jsx","webpack:///./src/components/Footer.jsx","webpack:///./src/theme.js","webpack:///./src/components/GlobalStyle.jsx","webpack:///./src/components/layouts/MainLayout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","styled_components__WEBPACK_IMPORTED_MODULE_2__","_components_layouts_MainLayout__WEBPACK_IMPORTED_MODULE_3__","_components_SiteMetadata__WEBPACK_IMPORTED_MODULE_4__","_components_DateTime__WEBPACK_IMPORTED_MODULE_5__","Post","styled","section","withConfig","displayName","componentId","PostTitle","Link","IndexPage","_ref","posts","data","allMarkdownRemark","edges","a","createElement","pathname","map","post","key","node","frontmatter","path","format","date","to","title","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","date_fns__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","date_fns_locale_es__WEBPACK_IMPORTED_MODULE_4__","date_fns_locale_es__WEBPACK_IMPORTED_MODULE_4___default","Time","time","DateTime","children","dateFormat","locale","EsLocale","propTypes","PropTypes","string","isRequired","SiteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_ref2","_ref2$site$siteMetada","site","siteMetadata","siteUrl","twitter","react_helmet__WEBPACK_IMPORTED_MODULE_2__","defaultTitle","titleTemplate","lang","rel","href","name","content","property","_public_static_d_2812037760_json__WEBPACK_IMPORTED_MODULE_0__","Header","header","HeaderContainer","div","Title","h1","GatsbyLink","MainLayout","react_default","Heading","gatsby_browser_entry","_2968191912","Container","footer","p","theme","sidePadding","Content","contentMaxWidth","Footer","mediaWidth","primaryColor1","primaryColor2","greyColor1","greyColor2","greyColor3","headerFontFamily","bodyFontFamily","logoFontFamily","navbarWidth","navbarBackgroundColor","smallViewport","tabletViewport","mediumViewport","largeViewport","GlobalStyle","createGlobalStyle","_templateObject","Base64","encode","Main","main","styled_components_browser_esm","Fragment","components_GlobalStyle"],"mappings":"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","file":"component---src-pages-index-jsx-aa0097420a80a3adcb1a.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Link from \"gatsby-link\"\nimport styled from 'styled-components'\nimport MainLayout from \"../components/layouts/MainLayout\"\nimport SiteMetadata from \"../components/SiteMetadata\"\nimport DateTime from '../components/DateTime';\n\nconst Post = styled.section`\n  flex: 1 0 100%;\n  margin: 1rem 0;\n  font-size: 1.4375rem;\n  background-color: white;\n\n  @media only screen and (max-width: 29.999rem) {\n    > a {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst PostTitle = styled(Link)``\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges: posts },\n  },\n}) => (\n  <MainLayout>\n    <SiteMetadata pathname=\"/\" />\n    <article>\n      <h1>Ãšltimas publicaciones</h1>\n      {posts.map(post => (\n        <Post key={post.node.frontmatter.path}>\n          <DateTime format=\"MMMM D, YYYY\">{post.node.frontmatter.date}</DateTime>\n          <PostTitle to={post.node.frontmatter.path}>\n            {post.node.frontmatter.title}\n          </PostTitle>\n        </Post>\n      ))}\n    </article>\n  </MainLayout>\n)\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___layout] }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            categories\n            description\n            path\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { format } from \"date-fns\"\nimport styled from \"styled-components\"\nimport EsLocale from \"date-fns/locale/es\"\n\nconst Time = styled.time`\n  font-size: 1rem;\n  width: 100%;\n  display: block;\n  text-align: center;\n  padding: 0.25rem 0;\n`\n\nconst DateTime = ({ children: date, format: dateFormat }) => (\n  <Time>\n    {format(date, dateFormat, {\n      locale: EsLocale,\n    })}\n  </Time>\n)\n\nDateTime.propTypes = {\n  children: PropTypes.string.isRequired,\n  format: PropTypes.string.isRequired,\n}\n\nexport default DateTime\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\n// import gatsbyIcon from \"../assets/gatsby-icon.png\"\n\nconst SiteMetadata = ({ pathname }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteMetadata {\n        site {\n          siteMetadata {\n            siteUrl\n            title\n            twitter\n          }\n        }\n      }\n    `}\n    render={({\n      site: {\n        siteMetadata: { siteUrl, title, twitter },\n      },\n    }) => (\n      <Helmet defaultTitle={title} titleTemplate={`%s | ${title}`}>\n        <html lang=\"en\" />\n        <link rel=\"canonical\" href={`${siteUrl}${pathname}`} />\n        <meta name=\"docsearch:version\" content=\"2.0\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover,user-scalable=0\"\n        />\n        <meta name=\"description\" content=\"roofox.dev\" />\n\n        <meta property=\"og:url\" content={siteUrl} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:locale\" content=\"en\" />\n        <meta property=\"og:site_name\" content={title} />\n        {/*<meta property=\"og:image\" content={`${siteUrl}${gatsbyIcon}`} />*/}\n        <meta property=\"og:image:width\" content=\"512\" />\n        <meta property=\"og:image:height\" content=\"512\" />\n\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:site\" content={twitter} />\n      </Helmet>\n    )}\n  />\n)\n\nexport default SiteMetadata\n","import React from \"react\"\nimport { StaticQuery, Link as GatsbyLink, graphql } from \"gatsby\"\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: center;\n`;\n\nconst HeaderContainer = styled.div`\n  max-width: 76rem;\n  flex: 1;\n`\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst Link = styled(GatsbyLink)`\n  background-image: none !important;\n  font-size: 3rem;\n`\n\nconst MainLayout = ({\n  site: {\n    siteMetadata: { title },\n  },\n}) => (\n  <Header>\n    <HeaderContainer>\n      <Title>\n        <Link to=\"/\">{title}</Link>\n      </Title>\n    </HeaderContainer>\n  </Header>\n)\n\nconst query = graphql`\n  query HeadingQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default () => (\n  <StaticQuery\n    query={query}\n    render={MainLayout}\n  />\n)\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.footer`\n  width: 100%;\n  height: 4rem;\n  padding: 0 ${p => p.theme.sidePadding};\n  overflow: hidden;\n  margin-top: 0rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  flex: 1 0 100%;\n  justify-content: flex-start;\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  max-width: ${p => p.theme.contentMaxWidth};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n`;\n\n\nexport default ({ children }) => (\n  <Container>\n    <Content>\n      {children}\n    </Content>\n  </Container>\n);\n","const theme = {\n  mediaWidth: \"62rem\",\n}\n\ntheme.primaryColor1 = \"#3f51b5\"\ntheme.primaryColor1 = \"#1E88E5\"\ntheme.primaryColor2 = \"#1a237e\"\ntheme.primaryColor2 = \"#1565C0\"\ntheme.greyColor1 = \"#f5f5f5\"\ntheme.greyColor2 = \"#eeeeee\"\ntheme.greyColor3 = \"#9e9e9e\"\ntheme.headerFontFamily = \"Kanit\"\ntheme.bodyFontFamily = \"Merriweather\";\ntheme.logoFontFamily = \"Yellowtail\"\ntheme.navbarWidth = \"16rem\"\ntheme.sidePadding = \"2rem\"\ntheme.contentMaxWidth = `calc(75rem - ${theme.navbarWidth})`\ntheme.navbarBackgroundColor = theme.primaryColor1\ntheme.smallViewport = \"34rem\"\ntheme.tabletViewport = \"48rem\"\ntheme.mediumViewport = \"62rem\"\ntheme.largeViewport = \"75rem\"\n\nexport default theme\n","import { createGlobalStyle } from \"styled-components\"\nimport { Base64 } from 'js-base64';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Kanit:700');\n  @import url('https://fonts.googleapis.com/css?family=Merriweather');\n  @import url('https://fonts.googleapis.com/css?family=Noto+Serif+JP');\n\n  /*\n  header,\n  article,\n  main,\n  div {\n    outline: 1px dashed grey;\n  }\n  //*/\n\n  /*\n  base: 16px\n\n  0.0625rem   \t 1px\n  0.1250rem    \t 2px\n  0.1875rem   \t 3px\n  0.2500rem   \t 4px\n  0.3125rem   \t 5px\n  0.3750rem    \t 6px\n  0.4375rem   \t 7px\n  0.5000rem    \t 8px\n  0.5625rem   \t 9px\n  0.6250rem    \t10px\n  0.6875rem   \t11px\n  0.7500rem   \t12px\n  0.8125rem   \t13px\n  0.8750rem    \t14px\n  0.9375rem   \t15px\n  1.0000rem    \t16px\n  */\n\n  html {\n    font-size: 16px;\n\n    @media (max-width: 700px) {\n      font-size: 15px;\n    }\n  }\n  \n  body {\n    font-family: ${p => p.theme.bodyFontFamily};\n  }\n\n  h1, h2 {\n    font-family: ${p => p.theme.headerFontFamily};\n    font-size: 3rem;\n    line-height: 2.5rem!important;\n    margin: 0;\n    padding: 2rem 0;\n\n    & a {\n      text-decoration: none;\n    }\n\n    @media (max-width: 700px) {\n      font-size: 2rem;\n      padding: 1rem 0;\n    }\n  }\n\n  a:not(.gatsby-resp-image-link) {\n    background: linear-gradient(to bottom, ${p =>\n      p.theme.primaryColor1} 0%, ${p => p.theme.primaryColor1} 100%);\n    background-position: 0 100%;\n    background-repeat: repeat-x;\n    background-size: 3px 3px;\n    color: #000;\n    text-decoration: none;\n    padding-bottom: 0.5000rem;\n\n    &:hover {\n      background-image: url(\"data: image/svg+xml;base64,${Base64.encode(`<svg id='squiggle-link' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:ev='http://www.w3.org/2001/xml-events' viewBox='0 0 20 4'><style type='text/css'>.squiggle{animation:shift .3s linear infinite;}@keyframes shift {from {transform:translateX(0);}to {transform:translateX(-20px);}}</style><path fill='none' stroke='#1E88E5' stroke-width='2' class='squiggle' d='M0,3.5 c 5,0,5,-3,10,-3 s 5,3,10,3 c 5,0,5,-3,10,-3 s 5,3,10,3'/></svg>`)}\");\n      background-position: 0 100%;\n      background-size: auto 6px;\n      background-repeat: repeat-x;\n      text-decoration: none;\n    }\n  }\n\n  img {\n    border: 0.2rem solid ${p => p.theme.primaryColor1};\n  }\n\n  .gatsby-highlight  {\n    position: relative;\n\n    &::before {\n      content: attr(data-language);\n      background: ${p => p.theme.primaryColor1};\n      border-bottom-left-radius: 0.25rem;\n      color: #FFF;\n      font-size: 0.75rem;\n      font-family: SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;\n      letter-spacing: 0.075em;\n      line-height: 1;\n      padding: 0.25rem 0.5rem;\n      position: absolute;\n      right: 0;\n      text-align: right;\n      text-transform: uppercase;\n      top: 0;\n      z-index: 5;\n    }\n  }\n\n  /* pre[class*=\"language-\"]:before, pre[class*=\"language-\"]:after {} */\n\n  pre[class*=\"language-\"] {\n    :before {\n      content: none;\n    }\n\n    :after {\n      content: none;\n    }\n\n    &.line-numbers.line-numbers {\n      code {\n        padding-left: 1rem;\n        border-left-color: ${p => p.theme.primaryColor1};\n        border-left-width: 2rem;\n      }\n      .line-numbers-rows {\n        width: 2rem!important;\n        border-right-color: ${p => p.theme.primaryColor1};\n\n        span::before {\n          color: #FFF;\n          text-align: center;\n          width: 100%;\n        }\n      }\n    }\n  }\n\n  /* pre[class*=\"language-\"] > code {\n    border-left-width: 1rem;\n  } */\n\n  /*\n  :not(pre) > code[class*=\"language-\"] {\n    color: ${p => p.theme.primaryColor1};\n  }\n\n  .gatsby-highlight pre[class*=\"language-\"].line-numbers {\n    padding-left: 5.8em;\n  }\n\n  .gatsby-highlight pre[class*=\"language-\"]>code {\n    padding-left: 1rem;\n    border-left-width: 1rem;\n    border-left-color: ${p => p.theme.primaryColor1};\n\n    @media (max-width: 700px) {\n      font-size: 0.75rem;\n    }\n  }\n\n  .gatsby-highlight {\n    border-radius: 0.3em;\n    margin: 0;\n    padding: 0em;\n    overflow: auto;\n  }\n\n  .gatsby-highlight pre[class*=\"language-\"].line-numbers {\n    padding: 0;\n    padding-left: 2.8em;\n    overflow: initial;\n  }\n\n  .gatsby-highlight-code-line {\n    background-color: ${p => p.theme.primaryColor1};\n  }\n  */\n\n  blockquote:not([data-name=\"title\"]) {\n    border-left: 1rem solid ${p => p.theme.primaryColor1};\n    font-style: italic;\n    margin: 0;\n    padding: 0 0 0 2rem;\n    position: relative;\n\n    @media (max-width: 700px) {\n      padding: 0 0 0 1rem;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import React from \"react\"\nimport styled, { ThemeProvider } from \"styled-components\"\nimport Heading from '../../components/Heading'\nimport Footer from \"../../components/Footer\"\nimport theme from \"../../theme\"\nimport GlobalStyle from \"../../components/GlobalStyle\"\n\nconst Main = styled.main`\n  padding: 0 ${p => p.theme.sidePadding};\n  overflow: hidden;\n  margin-top: 0rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst MainLayout = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <>\n      <GlobalStyle />\n      <Heading />\n      <Main>\n        {children}\n        <Footer>\n          <p>Blog escrito por Sergio Flores</p>\n        </Footer>\n      </Main>\n    </>\n  </ThemeProvider>\n)\n\nexport default MainLayout\n"],"sourceRoot":""}